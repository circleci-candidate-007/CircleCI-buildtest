{"ast":null,"code":"var _jsxFileName = \"/toolbox/app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Button from './Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [count, setCount] = useState(0);\n\n  const incrementCount = increment => {\n    setCount(count + increment);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      increment: 1,\n      onClickFunction: incrementCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      increment: 10,\n      onClickFunction: incrementCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      increment: 100,\n      onClickFunction: incrementCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      increment: 1000,\n      onClickFunction: incrementCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Button","App","count","setCount","incrementCount","increment"],"sources":["/toolbox/app/src/App.js"],"sourcesContent":["import React, { useState } from 'react'\nimport Button from './Button'\n\nconst App = () => {\n  const [count, setCount] = useState(0)\n\n  const incrementCount = increment => {\n    setCount(count + increment)\n  }\n\n  return (\n    <div>\n      <Button increment={1} onClickFunction={incrementCount} />\n      <Button increment={10} onClickFunction={incrementCount} />\n      <Button increment={100} onClickFunction={incrementCount} />\n      <Button increment={1000} onClickFunction={incrementCount} />\n      <span>{count}</span>\n    </div>\n  )\n}\n\nexport default App\n\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAChB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,CAAD,CAAlC;;EAEA,MAAMK,cAAc,GAAGC,SAAS,IAAI;IAClCF,QAAQ,CAACD,KAAK,GAAGG,SAAT,CAAR;EACD,CAFD;;EAIA,oBACE;IAAA,wBACE,QAAC,MAAD;MAAQ,SAAS,EAAE,CAAnB;MAAsB,eAAe,EAAED;IAAvC;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,MAAD;MAAQ,SAAS,EAAE,EAAnB;MAAuB,eAAe,EAAEA;IAAxC;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE,QAAC,MAAD;MAAQ,SAAS,EAAE,GAAnB;MAAwB,eAAe,EAAEA;IAAzC;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE,QAAC,MAAD;MAAQ,SAAS,EAAE,IAAnB;MAAyB,eAAe,EAAEA;IAA1C;MAAA;MAAA;MAAA;IAAA,QAJF,eAKE;MAAA,UAAOF;IAAP;MAAA;MAAA;MAAA;IAAA,QALF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AASD,CAhBD;;GAAMD,G;;KAAAA,G;AAkBN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}